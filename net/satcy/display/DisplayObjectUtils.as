package net.satcy.display{	import flash.display.*;
	import flash.geom.Point;
	import flash.media.Video;	public class DisplayObjectUtils{				public static function removeAllChildren(mc:*):void{			var c_num:int = mc.numChildren;			if(c_num>0){				for(var i:int = 0;i<c_num;i++){					mc.removeChildAt(0);				}			}		}				public static function removeChildSafty(mc:DisplayObject):void{			if ( mc && mc.parent ) mc.parent.removeChild(mc);		}				public static function getLTPoint(mc:DisplayObjectContainer):Point{			var pos:Point = new Point(100000,100000);			var c_num:int = mc.numChildren;			if(c_num>0){				for(var i:int = 0;i<c_num;i++){					var __mc:DisplayObject = mc.getChildAt(i) as DisplayObject;					trace(__mc.scaleX, __mc.scaleY);					if( pos.x > __mc.x ) pos.x = __mc.x;					if( pos.y > __mc.y ) pos.y = __mc.y;				}			}			return pos;		}						public static function isExistChild(parent:Sprite, child:*):Boolean{			var c_num:int = parent.numChildren;			var bool:Boolean = false;			if(c_num>0){				for(var i:int = 0;i<c_num;i++){					if ( parent.getChildAt(i) == child ){						bool = true;					}				}			}			return bool;		}				public static function mouseEnable(t_mc:Sprite, _bool:Boolean):void{			t_mc.mouseChildren = _bool;			t_mc.mouseEnabled = _bool;		}				public static function getChildFront(t_mc:DisplayObjectContainer):DisplayObject{			var n:int = t_mc.numChildren;			if ( n < 1 ){				return new Sprite();			}else{				return t_mc.getChildAt( n-1 );			}		}	}	}