package net.satcy.data {	import deng.fzip.FZip;	import deng.fzip.FZipFile;		import flash.display.*;	import flash.events.*;	import flash.net.URLRequest;	import flash.utils.clearInterval;	import flash.utils.setInterval;		import net.satcy.data.LoadSwfManager;	import net.satcy.data.LoadImageEvent;	import net.satcy.data.LoadSoundManager;
	import flash.media.Sound;		public class LoadZip extends EventDispatcher{		private var zip:FZip;		private var onCompleteFunc:Function;		private var interval:uint = 0;		private var index:uint = 0;				public function LoadZip(__path:String, fn:Function) {			trace("LoadZip called");			onCompleteFunc = fn;						zip = new FZip();			//zip.addEventListener(Event.OPEN, onOpen);			zip.addEventListener(Event.COMPLETE, onComplete);			zip.addEventListener(ProgressEvent.PROGRESS, progressHandler);			zip.load(new URLRequest(__path));		}				private function onOpen(evt:Event):void {			trace("LoadZip onOpen");			//fileMarge();		}				private function onComplete(evt:Event):void {			trace("LoadZip onComplete :: Zip解凍開始");			clearInterval(interval);			interval = setInterval(fileMarge, 33);			//fileMarge();			//destroy();		}		private function destroy():void{			clearInterval(interval);						//zip.removeEventListener(Event.OPEN, onOpen);			zip.removeEventListener(Event.COMPLETE, onComplete);			zip.removeEventListener(ProgressEvent.PROGRESS, progressHandler);			zip.close();			zip = null;						onCompleteFunc();			onCompleteFunc = null;		}		private function fileMarge():void {			var lsm:LoadSwfManager = LoadSwfManager.getInstance();						var file_num:uint = zip.getFileCount();			//trace("LoadZip fileMarge::"+file_num);			var file:FZipFile;			var fule_name:String;			var loader:Loader;			for(var i:int = 0; i<32;i++){				if(file_num > index){					file = zip.getFileAt(index);					fule_name = file.filename;										if( fule_name.indexOf(".swf") != -1 || 						fule_name.indexOf(".jpeg") != -1 || 						fule_name.indexOf(".jpg") != -1 || 						fule_name.indexOf(".gif") != -1 || 						fule_name.indexOf(".png") != -1 ) {						//trace(fule_name);						if(lsm.loadedCheck(fule_name) == false){							loader = new Loader();							loader.loadBytes(file.content);							lsm.loadedStore(fule_name, loader);						}					}					/*					if(fule_name.indexOf(".mp3") != -1 ) {						//trace(fule_name);						if(lsm.loadedCheck(fule_name) == false){							loader = new Loader();							loader.loadBytes(file.content);							var so:Sound = loader.content as Sound;							LoadSoundManager.loadedStore(fule_name, so);						}					}*/					index++;				}else{					destroy();					break;				}			}		}				private function progressHandler(event:ProgressEvent):void {            //trace("progressHandler: bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);			var r:LoadImageEvent = new LoadImageEvent (LoadImageEvent.ON_PROGRESS);			r.percent = Math.floor(event.bytesLoaded/event.bytesTotal*100);			dispatchEvent (r);///イベント送出        }	}}