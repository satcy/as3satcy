package net.satcy.bitmap{	import flash.display.*;	import flash.events.*;	import flash.geom.*;	public class ScanSlicer extends Sprite{		private var target_mc:*;		private var bmd_0:BitmapData;		private var bmd:BitmapData;		private var bm:Bitmap;				private var t_w:int = 0;		private var t_h:int = 0;		private var n_w:int = 0;				private var inc_x:int;						private var onCompleteFunc:Function;		public function ScanSlicer(t_mc:*, inc:int, fn:Function){			target_mc = t_mc;			inc_x = inc;			onCompleteFunc = fn;						t_w = target_mc.width;			t_h = target_mc.height;			trace(target_mc.scaleX+"**************"+target_mc.scaleY);						bmd_0 = new BitmapData(target_mc.width, target_mc.height, true, 0x00000000);			bmd = new BitmapData(target_mc.width, target_mc.height, true, 0x00000000);			bm = new Bitmap(bmd);						var myMatrix:Matrix = new Matrix();			myMatrix.scale(target_mc.scaleX, target_mc.scaleY);						bmd_0.draw(target_mc, myMatrix);			addChild(bm);						addEventListener(Event.ENTER_FRAME, onEnterFrameHandler, false, 0, true);		}		private function onEnterFrameHandler(e:Event):void{			var rect:Rectangle = new Rectangle(n_w, 0, 1, t_h);			var pt:Point = new Point(n_w, 0);			for(var i:int=0;i<inc_x;i++){				rect = new Rectangle(n_w+i, 0, 1, t_h);				pt = new Point(n_w+i, 0);				bmd.copyPixels(bmd_0, rect, pt);			}			var bmd_temp:BitmapData = new BitmapData(1, t_h, true, 0x00000000);			bmd_temp.copyPixels(bmd_0, rect, new Point(0,0));			var myMatrix:Matrix = new Matrix();			var scale_x:Number = (t_w-n_w);						myMatrix.scale(scale_x, 1);			myMatrix.translate(n_w + inc_x, 0);			bmd.draw(bmd_temp, myMatrix, new ColorTransform(),"normal", new Rectangle(n_w, 0, t_w, t_h), false);						if(n_w>t_w){				bmd.dispose();				bmd_0.dispose();				bm = null;				removeEventListener(Event.ENTER_FRAME, onEnterFrameHandler);				onCompleteFunc();			}else{				n_w += inc_x;			}		}	}		}