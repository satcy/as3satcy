package net.satcy.bitmap{		import flash.display.*;	import flash.geom.*;	import flash.utils.*;		public class BitmapTransition extends Sprite{		private var picWidth:Number;		private var picHeight:Number;		private var picture1:BitmapData;		private var currentMask:BitmapData;		private var maskBitmap:BitmapData;		private var nextBitmap:BitmapData;		private var bm:Bitmap;		private var _mc:MovieClip;		private var _rect:Rectangle;		private var _point:Point;		//255-0		private var blueChannel:Number;				private var complete_func:Function;		private var id:Number = 0;				public function BitmapTransition(t_mc:MovieClip, t_linkage, m_linkage, fn:Function = null){			_mc = t_mc;			trace(_mc);			picture1 = t_linkage;			currentMask = m_linkage;			picWidth = picture1.width;			picHeight = picture1.height;			maskBitmap = new BitmapData(picWidth, picHeight, true, 0x00000000);			nextBitmap = new BitmapData(picWidth, picHeight, true, 0x00000000);			_rect = new Rectangle(0, 0, nextBitmap.width, nextBitmap.height);			_point = new Point(0,0);			var bm:Bitmap = new Bitmap(nextBitmap);			_mc.addChild(bm);			clearInterval(id);			id = setInterval(doThreshold, 33)			complete_func = fn;			blueChannel = 255;		}						//threshold判定を行う関数		private function doThreshold(){			blueChannel -=8;			if(blueChannel<0){				blueChannel = 0;				//nextBitmap.fillRect(_rect,0x00000000);				clearInterval(id);				delete this;				complete_func();			}			maskBitmap.threshold(currentMask, _rect ,_point,"<=",blueChannel,0x00000000,0x000000FF,true);			nextBitmap.copyPixels(picture1, _rect, _point, maskBitmap, _point, true);		}			}			}