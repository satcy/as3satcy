package net.satcy.bitmap{	import flash.display.Sprite;	import flash.display.BitmapData;	import flash.geom.Matrix;	import flash.events.*;	import net.satcy.data.LoadImage;	/*		@author satoshi	*/		public class MaskImage extends Sprite	{						public var image:BitmapData;				private var callbackObj:Object;		private var callback:String;				private var baseScale:Number;		public var baseHeight:Number;		public var baseWidth:Number;						public var index:Number;				public function MaskImage(){					}		public function load( imageURL:String, maskURL:String, _baseScale:Number, _callbackObj:Object, _callback:String ):void{						callbackObj = _callbackObj;			callback = _callback;						baseScale = _baseScale;						var li:LoadImage = LoadImage.getInstance();			li.loadImage(imageURL, loadNext);					}				private function loadNext():void{					}				private function assembleImage():void		{									baseWidth = Math.ceil(baseScale * imageHolder._width);			baseHeight = Math.ceil(baseScale * imageHolder._height);						image = new BitmapData(baseWidth, baseHeight, true, 0 );						var m:Matrix  = new Matrix(baseScale,0,0,baseScale,0,0);						//var q:String = _quality;			//_quality = "BEST";						image.draw( imageHolder, m, null, "normal", null, true );						maskHolder.filters = [ new flash.filters.ColorMatrixFilter([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,255])]						image.draw( maskHolder, m,null,"alpha",null,true);						//_quality = q;						maskHolder.filters =[];			   			callbackObj[callback];		}			}}