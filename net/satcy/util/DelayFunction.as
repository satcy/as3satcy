package net.satcy.util{	import flash.events.TimerEvent;	import flash.utils.Timer;	/**	* @author satoshi horii	*/	public class DelayFunction implements IDelayFunction{				private var start_time:Number;		private var time:Number;		private var timer:Timer;		private var args_arr:Array;		private var obj:Object;		private var fn:Function;				public function DelayFunction(_time:Number, _obj:Object, _fn:Function, ...args){			time = _time;			obj = _obj;			fn = _fn;			args_arr = new Array();			var arg_len:int = args.length;			if(arg_len > 0){				for(var i:int = 0;i<arg_len;i++){					args_arr.push(args[i]);				}			}			var date:Date = new Date();			start_time = date.getTime();			timer = new Timer(_time, 1);			timer.addEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete);			timer.start();		}		public function stop():void{			if(timer != null){				timer.stop();				timer.removeEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete);				obj = null;				timer = null;				args_arr = null;				fn = null;			}		}		public function pause():void{			var date:Date = new Date();			time = time - (date.getTime() - start_time);			start_time = date.getTime();			timer.stop();		}		public function resume():void{			timer.delay = time;			timer.start();		}		private function onTimerComplete(e:TimerEvent):void{			if( timer == null ) return;			timer.removeEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete);			if( fn == null || obj == null ) return;			fn.apply(obj, args_arr);			obj = null;			timer = null;			args_arr = null;			fn = null;		}	}}