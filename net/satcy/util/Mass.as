package net.satcy.util{		/**	 * 	 * @author horii@satcy.net, satoshi@rhizomatiks.com	 * 	 * 	 */	public class Mass{				public static function minMax(num:Number, min:Number, max:Number):Number{			return Math.max(Math.min(num, max), min);		}				public static function zmap(num:Number, in_min:Number, in_max:Number, out_min:Number, out_max:Number):Number{			var sclaed:Number = scale(num, in_min, in_max, out_min, out_max);			return minMax(sclaed, out_min, out_max);		}				public static function scale(num:Number, in_min:Number, in_max:Number, out_min:Number, out_max:Number):Number{			return ((out_max - out_min)/(in_max - in_min))*num + out_min;		}				public static function randomNotNum(_randNum:uint, _notNum:uint):uint{			/**			 * _notNum以外の、random()*_randNumを返す			 */			var rand:int = int( Math.random()*_randNum );			while( rand == _notNum ){				rand = int( Math.random()*_randNum );			}			return rand;		}				private static var drunk_num:Number = Math.random();		public static function drunk(_num:Number):Number{			drunk_num += Math.random()*_num - Math.random()*_num;			if( drunk_num < 0 ) drunk_num = 0;			if( drunk_num > 1 ) drunk_num = 1;			return drunk_num;		}				public static function randamByRatio(_arr:Array):Number{			var l:int = _arr.length;			var lj:int;			var _a:Array = [];			for ( var i:int=0; i<l; i++ ){				lj = _arr[i];				for ( var j:int=0; j<lj; j++ ){					_a.push(i);				}			}			var idx:int = int(Math.random()*_a.length);			return _a[ idx ];		}	}	}