package net.satcy.ddd{	import net.satcy.ddd.Camera3d;	import net.satcy.ddd.Object3d;	import net.satcy.ddd.SortDepth;	import net.satcy.ddd.Draw3d;	/*		@author satoshi@rhizomatiks.com			*/	public class Space3d{		public var x:Number;		public var y:Number;				public var dict:Array;				protected var scope:*;				private var obj_count:uint;		private var cam:Camera3d;		//private var SD:SortDepth;		private var d3d:Draw3d;				public var numObject:uint;				public var cnt = 0;				public function Space3d(_scope:*){			scope = _scope;						dict = new Array();			obj_count = 0;			x = 0;			y = 0;			//SD = new SortDepth(_scope);		}				public function destroy():void{			cam = null;			dict = null;			scope = null;		}				public function addCamera(_cam:Camera3d):void{			cam = _cam;		}		public function addObject(o3d:Object3d):void{			dict.push(o3d);			numObject = dict.length;		}		public function addDraw(_d3d:Draw3d):void{			d3d = _d3d;		}				public function sortDisplayObjectsByDepth():void{			var t_dict:Array = new Array();			var i:int = 0;			for(i = 0;i<numObject;i++){				t_dict[i] = dict[i];			}						dict.sortOn("z", Array.DESCENDING | Array.NUMERIC);			for(i = 0;i<numObject;i++){				var _o3d_0:* = dict[i];				scope.setChildIndex(_o3d_0.t_mc, i);			}						dict = t_dict;			/*			for(var k:int = 0;k<numObject;k++){				var _o3d_1 = SD.getDepthAt(k);				trace(k +"::::::"+_o3d_1.z);			}			*/		}				public function update():void{			for( var i:int = 0; i<numObject; i++){				dict[i].update(x, y);			}			//d3d.render();		}	}}	