package net.satcy.ddd{		import caurina.transitions.Tweener;					public class Object3d {						public var x:Number;		public var y:Number;		public var z:Number;				public var rotationZ:Number = 0;				public var rad:Number = Math.PI/180.;		public var cam:Camera3d;				public var t_mc:*;				public function Object3d(_mc:*, __point:Point3d, _cam:Camera3d){			x = __point.x;			y = __point.y;			z = __point.z;									t_mc = _mc;						cam = _cam;								}				public function update(__x:Number, __y:Number):void{						//if( cam.z > z){				//t_mc.visible = false;				/*				if(t_mc.visible && Tweener.isTweening(t_mc) == false){					Tweener.addTween(t_mc, {alpha:0,  time:1, onComplete:function(){t_mc.visible = false;}});				}				*/			//}else{				/*				if(t_mc.visible == false){					t_mc.visible = true;				}				*/								var sZ:Number = cam.z/z;				var tempx:Number = (x - cam.x)*sZ;				var tempy:Number = (y - cam.y)*sZ;				var dd:Number = Math.sqrt(tempx*tempx+tempy*tempy);				var rota:Number = Math.atan2(tempy, tempx) + rad*cam.rotationZ;				var n_x:Number = Math.cos(rota)*dd;				var n_y:Number = Math.sin(rota)*dd;												if(sZ>1) {					t_mc.alpha += (0 - t_mc.alpha)*0.2 ;				}else{					if(t_mc.alpha < 1)					t_mc.alpha += (1 - t_mc.alpha)*0.2 ;				}				t_mc.x = (__x + n_x);				t_mc.y = (__y + n_y);				t_mc.scaleX = t_mc.scaleY = sZ;								/*				if(cam.z-z<0){					//Tweener.addTween(t_mc, {_color:brightness(sZ), alpha:1, time:0});				}else{					Tweener.addTween(t_mc, {_color:0xFFFFFF, alpha:(1+(1-sZ)),time:0});					//Tweener.removeTweens(t_mc);					//Tweener.addTween(t_mc, {_color:0xFFFFFF, _blur_blurX:8, _blur_blurY:8, time:0});									}				*/				//t_mc.alpha = 1 - Math.min(Math.abs(1 - sZ), 1);				t_mc.rotation = cam.rotationZ - rotationZ;			//}		}		public function toString():String{			return String( z );		}		private function brightness(num:Number):uint{			var asc:int = Math.floor(num*256);			return asc*256*256+asc*256+asc;		}			}}