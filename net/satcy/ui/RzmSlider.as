package net.satcy.ui{	////////ホイールスクロール用	import flash.external.*;		import flash.display.*;	import flash.events.*;	///	import caurina.transitions.Tweener;	///	import flash.utils.setTimeout;	////	public class RzmSlider extends Sprite {		private var target_mc:*;		private var bar_bg_range:uint;		private var bar_range:uint;		private var ratio:Number;		private var bar_mc:MovieClip;		private var bar_bg_mc:MovieClip;		private var bar_distance_mouse:int;		private var onMovingFunc:Function = nullfunc;				private var wasSuccessful:Boolean;		private var pre_in_num = 0;		public function RzmSlider(_mc:*, scroler_hi:uint, bar_linkage, bar_bg_linkage){						target_mc = _mc;			bar_bg_range = Math.floor(scroler_hi);			bar_range = Math.floor(bar_bg_range/target_mc.height*bar_bg_range);			ratio = (target_mc.height - bar_bg_range)/(bar_bg_range - bar_range);			trace("SLIF¥DER:::  "+ ratio);			bar_bg_mc = bar_bg_linkage;			/////バー背景クラスは、setHeight()を用意すること			bar_bg_mc.setHeight(bar_bg_range);			bar_bg_mc.addEventListener(MouseEvent.MOUSE_UP, onBgMouseUpHandler, false, 0, true);			this.addChild(bar_bg_mc);			bar_mc = new bar();			bar_mc = bar_linkage;			/////バークラスは、setHeight()を用意すること			bar_mc.setHeight(bar_range);			bar_mc.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandler, false, 0, true);			this.addChild(bar_mc);						//			this.addEventListener(Event.REMOVED_FROM_STAGE, closeHandler, false, 0, true);						///ホイールスクロール			var methodName:String = "handleScroll";			var method:Function = handleScrollEvent;			wasSuccessful = ExternalInterface.addCallback(methodName, method);					}				private function handleScrollEvent(d:Number) {			var slide:int;			if (pre_in_num-d != 0) {				if (d<0) {					slide = 10;				} else {					slide = -10;				}				bar_mc.y += slide;				if(bar_mc.y<0){					bar_mc.y = 0;				}				var n_y:int = bar_bg_range-bar_range;				if(bar_mc.y>n_y){					bar_mc.y = n_y;				}				Tweener.addTween(target_mc, {y:-bar_mc.y*ratio, time:0.5, transition:"easeoutcirc"});				var interval_temp:uint = setTimeout(onMovingFunc, 500);			}			pre_in_num = d;		}												private function onBgMouseUpHandler(e:MouseEvent):void{			if(this.mouseY > bar_mc.y){				bar_mc.y += bar_mc.height;			}else{				bar_mc.y -= bar_mc.height;			}			if(bar_mc.y<0){				bar_mc.y = 0;			}			var n_y:int = bar_bg_range-bar_range;			if(bar_mc.y>n_y){				bar_mc.y = n_y;			}			Tweener.addTween(target_mc, {y:-bar_mc.y*ratio, time:0.5, transition:"easeoutcirc"});			///			var interval_temp:uint = setTimeout(onMovingFunc, 500);		}		private function onMouseDownHandler(e:MouseEvent):void{			bar_bg_mc.removeEventListener(MouseEvent.MOUSE_UP, onBgMouseUpHandler);			bar_mc.removeEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandler);			stage.addEventListener(MouseEvent.MOUSE_MOVE, onMouseMoveHandler, false, 0, true);			stage.addEventListener(MouseEvent.MOUSE_UP, onMouseUpHandler, false, 0, true);			bar_distance_mouse = this.mouseY - bar_mc.y;		}		private function onMouseMoveHandler(e:MouseEvent):void{			bar_mc.y = this.mouseY - bar_distance_mouse;			if(bar_mc.y<0){				bar_mc.y = 0;			}			var n_y:int = bar_bg_range-bar_range;			if(bar_mc.y>n_y){				bar_mc.y = n_y;			}			Tweener.addTween(target_mc, {y:-bar_mc.y*ratio, time:0.5, transition:"easeoutcirc"});			//target_mc.y = -bar_mc.y*ratio;			//onMovingFunc();		}		private function onMouseUpHandler(e:MouseEvent):void{			bar_bg_mc.addEventListener(MouseEvent.MOUSE_UP, onBgMouseUpHandler, false, 0, true);			bar_mc.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandler, false, 0, true);						var dispatcher: IEventDispatcher = IEventDispatcher( e.currentTarget );						dispatcher.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMoveHandler);			dispatcher.removeEventListener(MouseEvent.MOUSE_UP, onMouseUpHandler);			//			var interval_temp:uint = setTimeout(onMovingFunc, 500);						//onMovingFunc();		}		public function rebuild(num:uint){			///@param:uint   背景の高さ。			target_mc.y = 0;			bar_mc.y = 0;						bar_bg_range = Math.floor(num);			bar_range = Math.floor(bar_bg_range/target_mc.height*bar_bg_range);			ratio = (target_mc.height - bar_bg_range)/(bar_bg_range - bar_range);									bar_bg_mc.setHeight(bar_bg_range);			bar_mc.setHeight(bar_range);		}		public function setMovingFunc(func:Function){			onMovingFunc = func;		}		private function nullfunc(){		}		private function closeHandler(e:Event){			trace("REMOVED SLIDER");			bar_bg_mc.removeEventListener(MouseEvent.MOUSE_UP, onBgMouseUpHandler);			bar_mc.removeEventListener(MouseEvent.MOUSE_DOWN, onMouseDownHandler);						stage.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMoveHandler);			stage.removeEventListener(MouseEvent.MOUSE_UP, onMouseUpHandler);						this.removeEventListener(Event.REMOVED_FROM_STAGE, closeHandler);		}	}		}